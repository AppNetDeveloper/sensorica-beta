openapi: 3.0.0
info:
  title: 'Boisolo Api'
  description: 'This is a sample API documentation'
  contact:
    email: dev@boisolo.com
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.1
paths:
  /api/barcode:
    post:
      tags:
        - Barcode
      summary: 'Process barcode actions'
      operationId: c9c30919385e9fad2379fa4c0659a51d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                barcoder:
                  type: string
                token:
                  type: string
                machine_id:
                  type: string
              type: object
      responses:
        '200':
          description: 'Comprobación exitosa'
          content:
            application/json:
              schema:
                properties:
                  comando: { type: object }
                  status: { type: string }
                  message: { type: string }
                  barcode: { type: string }
                  token: { type: string }
                  machineId: { type: string }
                  mqttTopicBarcodes: { type: string }
                  mqttTopicOrders: { type: string }
                  mqttTopicFinish: { type: string }
                  mqttTopicPause: { type: string }
                  opeId: { type: string }
                  orderNotice: { type: string }
                  lastBarcode: { type: string }
                type: object
        '400':
          description: 'Proceso interrumpido: machine_id inválido'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '401':
          description: 'Proceso interrumpido: token inválido'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
  '/api/order-notice/{token}':
    get:
      tags:
        - 'Order Notice'
      summary: 'Obtener el order_notice por token (GET)'
      description: 'Retorna el JSON almacenado en order_notice para el token especificado.'
      operationId: getOrderNoticeByTokenGet
      parameters:
        -
          name: token
          in: path
          description: 'El token del código de barras'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                properties:
                  order_notice: { description: 'El contenido de order_notice en formato JSON', type: object }
                type: object
        '404':
          description: 'Token no encontrado'
  /api/order-notice:
    post:
      tags:
        - 'Order Notice'
      summary: 'Obtener el order_notice por token (POST)'
      description: 'Retorna el JSON almacenado en order_notice para el token especificado en el cuerpo de la solicitud.'
      operationId: getOrderNoticeByTokenPost
      requestBody:
        description: 'El token del código de barras'
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
              type: object
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                properties:
                  order_notice: { description: 'El contenido de order_notice en formato JSON', type: object }
                type: object
        '404':
          description: 'Token no encontrado'
  '/api/barcode-info/{token}':
    get:
      tags:
        - 'Barcode Info'
      summary: 'Obtener información del código de barras por token (GET)'
      description: 'Retorna machine_id, ope_id y last_barcode para el token especificado.'
      operationId: getBarcodeInfoByTokenGet
      parameters:
        -
          name: token
          in: path
          description: 'El token del código de barras'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                properties:
                  machine_id: { description: 'El ID de la máquina', type: string }
                  ope_id: { description: 'El ID del operador', type: string }
                  last_barcode: { description: 'El último código de barras escaneado', type: string }
                type: object
        '404':
          description: 'Token no encontrado'
  /api/barcode-info:
    post:
      tags:
        - 'Barcode Info'
      summary: 'Obtener información del código de barras por token (POST)'
      description: 'Retorna machine_id, ope_id y last_barcode para el token especificado en el cuerpo de la solicitud.'
      operationId: getBarcodeInfoByTokenPost
      requestBody:
        description: 'El token del código de barras'
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
              type: object
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                properties:
                  machine_id: { description: 'El ID de la máquina', type: string }
                  ope_id: { description: 'El ID del operador', type: string }
                  last_barcode: { description: 'El último código de barras escaneado', type: string }
                type: object
        '404':
          description: 'Token no encontrado'
  '/api/control-weight/{token}':
    get:
      tags:
        - 'Control Weight'
      summary: 'Get latest control weight data by token'
      operationId: 62ca68f0bb006dadd9d78f0f60d901e8
      parameters:
        -
          name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                properties:
                  name: { type: string }
                  gross_weight: { type: number }
                  dimension: { type: string }
                  box_number: { type: integer }
                  last_control_weight: { type: number }
                  last_dimension: { type: number }
                  last_box_number: { type: integer }
                  last_barcoder: { type: string }
                type: object
        '404':
          description: 'Modbus not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  '/api/control-weights/{token}/all':
    get:
      tags:
        - 'Control Weight'
      summary: 'Get all control weight data by token'
      operationId: ccf627f712de5ef777b163e0cf9eeddc
      parameters:
        -
          name: token
          in: path
          required: true
          schema:
            type: string
        -
          name: start_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        -
          name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { last_control_weight: { type: number }, last_dimension: { type: number }, last_box_number: { type: integer }, last_barcoder: { type: string }, last_final_barcoder: { type: string }, created_at: { type: string, format: date-time } }
                  type: object
        '404':
          description: 'Modbus not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  '/api/production-lines/{customerToken}':
    get:
      tags:
        - 'Production Lines'
      summary: 'Obtener líneas de producción por token de cliente (GET)'
      description: 'Retorna los tokens y nombres de las líneas de producción asociadas al cliente.'
      operationId: getProductionLinesByCustomerTokenGet
      parameters:
        -
          name: customerToken
          in: path
          description: 'El token del cliente'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre de la línea de producción', type: string }, token: { description: 'Token de la línea de producción', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  /api/production-lines:
    post:
      tags:
        - 'Production Lines'
      summary: 'Obtener líneas de producción por token de cliente (POST)'
      description: 'Retorna los tokens y nombres de las líneas de producción asociadas al cliente.'
      operationId: getProductionLinesByCustomerTokenPost
      requestBody:
        description: 'El token del cliente'
        required: true
        content:
          application/json:
            schema:
              properties:
                customerToken:
                  type: string
              type: object
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre de la línea de producción', type: string }, token: { description: 'Token de la línea de producción', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  '/api/modbus-info/{customerToken}':
    get:
      tags:
        - 'Modbus Info'
      summary: 'Obtener información de Modbuses por token de cliente (GET)'
      description: 'Retorna los nombres y tokens de los Modbuses asociados al cliente.'
      operationId: getModbusInfoByCustomerTokenGet
      parameters:
        -
          name: customerToken
          in: path
          description: 'El token del cliente'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre del Modbus', type: string }, token: { description: 'Token del Modbus', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  /api/modbus-info:
    post:
      tags:
        - 'Modbus Info'
      summary: 'Obtener información de Modbuses por token de cliente (POST)'
      description: 'Retorna los nombres y tokens de los Modbuses asociados al cliente.'
      operationId: getModbusInfoByCustomerTokenPost
      requestBody:
        description: 'El token del cliente'
        required: true
        content:
          application/json:
            schema:
              properties:
                customerToken:
                  type: string
              type: object
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre del Modbus', type: string }, token: { description: 'Token del Modbus', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  '/api/barcode-info-by-customer/{customerToken}':
    get:
      tags:
        - 'Barcode Info'
      summary: 'Obtener información de códigos de barras por token de cliente (GET)'
      description: 'Retorna los nombres y tokens de los códigos de barras asociados al cliente.'
      operationId: getBarcodeInfoByCustomerTokenGet
      parameters:
        -
          name: customerToken
          in: path
          description: 'El token del cliente'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre del código de barras', type: string }, token: { description: 'Token del código de barras', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  /api/barcode-info-by-customer:
    post:
      tags:
        - 'Barcode Info'
      summary: 'Obtener información de códigos de barras por token de cliente (POST)'
      description: 'Retorna los nombres y tokens de los códigos de barras asociados al cliente.'
      operationId: getBarcodeInfoByCustomerTokenPost
      requestBody:
        description: 'El token del cliente'
        required: true
        content:
          application/json:
            schema:
              properties:
                customerToken:
                  type: string
              type: object
      responses:
        '200':
          description: 'Operación exitosa'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { description: 'Nombre del código de barras', type: string }, token: { description: 'Token del código de barras', type: string } }
                  type: object
        '404':
          description: 'Cliente no encontrado'
  /api/modbuses:
    get:
      tags:
        - Modbus
      summary: 'Get modbuses by customer token'
      operationId: 6646650bb8da49bee7e1fc2223f0082e
      parameters:
        -
          name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { name: { type: string }, token: { type: string } }
                  type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '404':
          description: 'Invalid token'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/modbus/send:
    post:
      tags:
        - Modbus
      summary: 'Send dosage value via MQTT'
      operationId: af996aff13c7777fe17ac7a1bcc3b19a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                tolvaId:
                  type: integer
                token:
                  type: string
                value:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '404':
          description: 'Invalid token'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/order-stats/last:
    post:
      tags:
        - OrderStats
      summary: 'Obtener la última estadística de un pedido'
      description: 'Retorna la última estadística de pedidos para una línea de producción usando un token.'
      operationId: ee47f14473643b8ecb7469ddd308a775
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: some-production-line-token
                production_line_id:
                  type: integer
                  example: 1
                order_id:
                  type: string
                  example: ORD12345
                units:
                  type: integer
                  example: 100
                box:
                  type: integer
                  example: 10
                units_box:
                  type: integer
                  example: 50
              type: object
      responses:
        '200':
          description: 'Última estadística de pedido obtenida exitosamente'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer, example: 1 }
                  production_line_name: { type: string, example: 'Linea 1' }
                  order_id: { type: string, example: ORD12345 }
                  units: { type: integer, example: 100 }
                  created_at: { type: string, example: '2024-10-15 14:35:12' }
                type: object
        '400':
          description: 'Token es requerido'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token is required' }
                type: object
        '404':
          description: 'Línea de producción no encontrada'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Production line not found' }
                type: object
  /api/order-stats/between-dates:
    post:
      tags:
        - OrderStats
      summary: 'Obtener estadísticas de pedidos entre fechas'
      description: 'Obtiene estadísticas de pedidos entre dos fechas dadas para una línea de producción específica, utilizando el token de la línea.'
      operationId: 89d56fec7821f1729d93f47db5a82eee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: some-production-line-token
                start_date:
                  type: string
                  example: '2024-10-01'
                end_date:
                  type: string
                  example: '2024-10-20'
              type: object
      responses:
        '200':
          description: 'Estadísticas de pedidos entre fechas obtenidas exitosamente'
          content:
            application/json:
              schema:
                properties:
                  production_line_name: { type: string, example: 'Linea 1' }
                  order_id: { type: string, example: ORD12345 }
                  units: { type: integer, example: 100 }
                  created_at: { type: string, example: '2024-10-15 14:35:12' }
                type: object
        '404':
          description: 'Línea de producción no encontrada o sin estadísticas'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Production line not found or no order stats found for the specified dates' }
                type: object
  '/api/scada-material/{token}':
    get:
      tags:
        - 'Scada Materials'
      summary: 'Obtener los materiales de un SCADA por su token'
      operationId: c7a9ce0d72239d3404a54979961a6bc3
      parameters:
        -
          name: token
          in: path
          description: 'Token único del SCADA'
          required: true
          schema:
            type: string
            example: abc123
      responses:
        '200':
          description: 'Lista de materiales asociados al SCADA'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { type: integer, example: 1 }, name: { type: string, example: 'Material 1' } }
                  type: object
        '404':
          description: 'SCADA o materiales no encontrados'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Scada or materials not found' }
                type: object
  '/api/sensors/{token}':
    get:
      tags:
        - Sensores
      summary: 'Obtener datos del sensor por token'
      operationId: f5faa6b35d2bdbf9c74ca13977f9b46b
      parameters:
        -
          name: token
          in: path
          description: 'Token del sensor'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Datos del sensor obtenidos correctamente'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer, example: 1 }
                  name: { type: string, example: 'Sensor 1' }
                  sensor_type: { type: integer, example: 0 }
                  mqtt_topic_sensor: { type: string, example: sensor/topic/1 }
                  count_total: { type: integer, example: 100 }
                  token: { type: string, example: abc123 }
                type: object
        '404':
          description: 'Sensor no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Sensor not found' }
                type: object
  /api/sensors:
    get:
      tags:
        - Sensores
      summary: 'Obtener todos los sensores'
      description: 'Obtiene una lista de todos los sensores, agrupados por línea de producción.'
      operationId: 87a4f9259e66573c0b9ab249788f09ab
      responses:
        '200':
          description: 'Lista de sensores'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { type: integer, example: 1 }, name: { type: string, example: 'Sensor 1' }, value: { type: integer, example: 0 }, production_line: { properties: { id: { type: integer, example: 1 }, name: { type: string, example: 'Línea 1' } }, type: object } }
                  type: object
  /api/sensors/insert:
    post:
      tags:
        - Sensores
      summary: 'Insertar datos del sensor'
      description: 'Inserta datos en el sensor, verificando si necesita invertir el valor según su configuración.'
      operationId: b588a760b55c4b906e3abed7ad38cca1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                value:
                  type: integer
                  example: 1
                sensor:
                  type: string
                  example: sensor/topic
              type: object
      responses:
        '200':
          description: 'Datos procesados correctamente'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Datos procesados correctamente' }
                  sensor: { type: string, example: 'Sensor 1' }
                type: object
        '404':
          description: 'Sensor no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Sensor no encontrado' }
                type: object
  /api/queue-print:
    get:
      tags:
        - Queue
      summary: 'Store a value in the print queue (GET)'
      operationId: c2eb497c63f8619c2b9616a1e91d749e
      parameters:
        -
          name: token
          in: query
          required: true
          schema:
            type: string
        -
          name: value
          in: query
          required: true
          schema:
            type: string
        -
          name: url_back
          in: query
          required: true
          schema:
            type: string
            format: url
        -
          name: token_back
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Valor agregado a la cola de impresión'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '401':
          description: 'Token inválido'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '422':
          description: 'Datos inválidos'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
    post:
      tags:
        - Queue
      summary: 'Store a value in the print queue (POST)'
      operationId: 09e7517a2f89716553160b6317ce872c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                value:
                  type: string
                url_back:
                  type: string
                  format: url
                token_back:
                  type: string
              type: object
      responses:
        '200':
          description: 'Valor agregado a la cola de impresión'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '401':
          description: 'Token inválido'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '422':
          description: 'Datos inválidos'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/queue-print-list:
    get:
      tags:
        - Queue
      summary: 'Get a list of print queue items'
      operationId: 70db0a363dcec6beeee8e5353f7bc943
      parameters:
        -
          name: token
          in: query
          required: true
          schema:
            type: string
        -
          name: used
          in: query
          description: '0: only unused, 1: only used, all: all items'
          required: true
          schema:
            type: string
            enum:
              - '0'
              - '1'
              - all
      responses:
        '200':
          description: 'Listado de la cola de impresión'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { type: integer }, modbus_id: { type: integer }, value: { type: string }, used: { type: boolean }, url_back: { type: string }, token_back: { type: string }, created_at: { type: string, format: date-time }, updated_at: { type: string, format: date-time } }
                  type: object
        '401':
          description: 'Token inválido'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/store-credentials:
    post:
      tags:
        - WhatsApp
      summary: 'Guardar credenciales de WhatsApp'
      operationId: 72cb9d0ee6652cc1ebfc545770adbe6a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                creds:
                  type: string
                keys:
                  type: string
              type: object
      responses:
        '200':
          description: 'Credenciales guardadas con éxito.'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '500':
          description: 'Error al guardar las credenciales.'
  /api/send-message:
    post:
      tags:
        - WhatsApp
      summary: 'Enviar un mensaje a través de WhatsApp'
      operationId: 5f44fe4e091ddab7f95b25cec592e056
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                jid:
                  description: 'JID del destinatario'
                  type: string
                message:
                  description: 'Mensaje a enviar'
                  type: string
              type: object
      responses:
        '200':
          description: 'Mensaje enviado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Parámetros faltantes o inválidos.'
        '500':
          description: 'Error al enviar el mensaje.'
  /api/logout:
    post:
      tags:
        - WhatsApp
      summary: 'Cerrar sesión de WhatsApp'
      operationId: 6b54e589fe797e9a4e24da52954aa526
      responses:
        '200':
          description: 'Sesión cerrada y reiniciada con éxito.'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '500':
          description: 'Error al procesar la solicitud de cierre de sesión.'
  /api/get-qr:
    get:
      tags:
        - WhatsApp
      summary: 'Obtener código QR en formato SVG'
      operationId: bf95522aa18debe712b7679655fcaa40
      responses:
        '200':
          description: 'Código QR generado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  qr_svg: { type: string, format: svg }
                type: object
        '500':
          description: 'Error al generar el código QR.'
  /api/ip-zerotier:
    post:
      tags:
        - Barcode
      summary: 'Update the ZeroTier IP address for a barcode'
      operationId: 82cbd58107a2a5978641ce86344356ad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                ipZerotier:
                  type: string
              type: object
      responses:
        '200':
          description: 'ipZerotier updated successfully'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '400':
          description: 'Token and ipZerotier are required'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '404':
          description: 'Invalid token'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
  /api/barcode-scans:
    get:
      tags:
        - 'Barcode Scans'
      summary: 'Obtener el último código de barras escaneado'
      description: 'Devuelve el último código de barras escaneado para una línea de producción específica identificada por su token'
      operationId: getLastBarcode
      parameters:
        -
          name: token
          in: query
          description: 'Token de la línea de producción'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Éxito
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { properties: { barcode: { type: string, example: ABC123456789 }, production_order_id: { type: integer, example: 1 }, operator_id: { type: integer, example: 5 }, scanned_at: { type: string, format: date-time, example: '2025-06-10T18:15:53+02:00' }, barcode_data: { type: object, nullable: true } }, type: object }
                type: object
        '400':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  message: { type: string, example: 'Token de línea de producción requerido' }
                  errors: { type: object }
                type: object
        '404':
          description: 'Recurso no encontrado'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  message: { type: string, example: 'Línea de producción no encontrada con el token proporcionado' }
                type: object
  '/api/control_weight/{supplierOrderId}':
    get:
      tags:
        - 'Control Weight'
        - 'Supplier Order'
      summary: 'Obtener datos consolidados de control_weight por pedido de proveedor'
      description: 'Muestra la información consolidada de control_weight para un pedido de proveedor.'
      operationId: c3125b95cb2efc454bb659b2c738d092
      parameters:
        -
          name: supplierOrderId
          in: path
          description: 'Identificador del pedido de proveedor'
          required: true
          schema:
            type: integer
            example: 231167
      responses:
        '200':
          description: 'Datos consolidados del control de peso'
          content:
            application/json:
              schema:
                properties:
                  supplierOrderId: { type: integer, example: 231167 }
                  totalPallets: { type: integer, example: 3 }
                  totalWeight: { type: number, example: 900 }
                  pallets: { type: array, items: { properties: { palletNumber: { type: string, example: '231167.1' }, weight: { type: number, example: 300 }, unit: { type: string, example: Kg } }, type: object } }
                type: object
        '404':
          description: 'Pedido de proveedor no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Supplier order not found.' }
                type: object
  /api/modbus/cancel:
    post:
      tags:
        - Modbus
      summary: 'Cancel ongoing dosage for a Modbus'
      operationId: 1fdf1ef6bce37f8013cb4702c59ece1c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                token:
                  type: string
              type: object
      responses:
        '200':
          description: 'Cancellation command sent successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '404':
          description: 'Invalid token or Modbus not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/modbus/tara:
    post:
      tags:
        - Modbus
      summary: 'Set tara value for a Modbus'
      operationId: 9bfefcde1365c3e903e576afee94fb63
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                token:
                  type: string
                value:
                  type: number
              type: object
      responses:
        '200':
          description: 'Tara value set successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '404':
          description: 'Invalid token or Modbus not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/modbus/tara/reset:
    post:
      tags:
        - Modbus
      summary: 'Reset tara value for a Modbus to zero'
      operationId: e5ada42aca56e2231d82f4d065d26bc5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                token:
                  type: string
              type: object
      responses:
        '200':
          description: 'Tara reset successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '400':
          description: 'Token not provided'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '404':
          description: 'Invalid token or Modbus not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/update-or-insert:
    post:
      tags:
        - Workers
      summary: 'Update or insert a single worker'
      operationId: 7fe81bb385eb00fa676d376b4b92d08f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  description: 'Client ID'
                  type: integer
                name:
                  description: 'Worker name'
                  type: string
                password:
                  description: 'Worker password (optional)'
                  type: string
                email:
                  description: 'Worker email (optional)'
                  type: string
                phone:
                  description: 'Worker phone (optional)'
                  type: string
              type: object
      responses:
        '200':
          description: 'Worker updated or inserted successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/replace-all:
    post:
      tags:
        - Workers
      summary: 'Replace all Workers'
      operationId: 413a0097ac3e84e62e64babf962f122d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  id: { description: 'Client ID', type: integer }
                  name: { description: 'Workers name', type: string }
                  password: { description: 'Worker password (optional)', type: string }
                  email: { description: 'Worker email (optional)', type: string }
                  phone: { description: 'Worker phone (optional)', type: string }
                type: object
      responses:
        '200':
          description: 'All workers replaced successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/list-all:
    get:
      tags:
        - Workers
      summary: 'Get all workers'
      operationId: 4b3f33dae586851fbdcec9bdacd39856
      responses:
        '200':
          description: 'Returns all operators'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { description: 'Client ID', type: integer }, name: { description: 'Operator Name', type: string }, email: { description: 'Operator Email', type: string }, phone: { description: 'Operator Phone', type: string }, operator_posts: { description: 'Operator Assignments', type: array, items: { properties: { rfid_reading_id: { description: 'RFID Reading ID', type: integer }, sensor_id: { description: 'Sensor ID', type: integer }, modbus_id: { description: 'Modbus ID', type: integer }, count: { description: Count, type: integer }, product_list_id: { description: 'Product List ID', type: integer } }, type: object } } }
                  type: object
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/list-all2:
    get:
      tags:
        - Workers
      summary: 'Get all workers'
      operationId: 1f6d02c2bf992ddea5614da00593ec2d
      responses:
        '200':
          description: 'Returns all operators'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { description: 'Client ID', type: integer }, name: { description: 'Operator Name', type: string }, email: { description: 'Operator Email', type: string }, phone: { description: 'Operator Phone', type: string }, operator_posts: { description: 'Operator Assignments', type: array, items: { properties: { rfid_reading_id: { description: 'RFID Reading ID', type: integer }, sensor_id: { description: 'Sensor ID', type: integer }, modbus_id: { description: 'Modbus ID', type: integer }, count: { description: Count, type: integer }, product_list_id: { description: 'Product List ID', type: integer } }, type: object } } }
                  type: object
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  '/api/workers/{id}':
    get:
      tags:
        - Workers
      summary: 'Get a single worker by ID'
      operationId: d850293eb8353d4af58ade1625d8b2b9
      parameters:
        -
          name: id
          in: path
          description: 'Client ID of the worker'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Worker found'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer }
                  name: { type: string }
                  email: { type: string }
                  phone: { type: string }
                type: object
        '404':
          description: 'Worker not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
    delete:
      tags:
        - Workers
      summary: 'Delete a single worker by ID'
      operationId: 1086a6be9cfb91a1c53d618c57482431
      parameters:
        -
          name: id
          in: path
          description: 'Client ID of the worker to delete'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Worker deleted successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '404':
          description: 'Worker not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/reset-password-email:
    post:
      tags:
        - Workers
      summary: 'Reset worker password by email'
      operationId: 120c44caf13df4e4343747039de33511
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: "Operator's email"
                  type: string
              type: object
      responses:
        '200':
          description: 'Password reset successfully and email sent'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '404':
          description: 'Operator not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/reset-password-whatsapp:
    post:
      tags:
        - Workers
      summary: 'Reset worker password by whatsapp'
      operationId: 401201e8c8f21323dea6fde29235885b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                phone:
                  description: "Operator's phone"
                  type: string
              type: object
      responses:
        '200':
          description: 'Password reset and would send whatsapp message'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '404':
          description: 'Operator not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/workers/verify-password:
    post:
      tags:
        - Workers
      summary: 'Verify the password of a worker'
      operationId: cb3d727eae4b76c18d358bc5a04ac3f7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                operator_id:
                  description: 'Client ID of the worker'
                  type: integer
                password:
                  description: 'Password to verify'
                  type: string
              type: object
      responses:
        '200':
          description: 'Returns valid: true if password correct, false otherwise'
          content:
            application/json:
              schema:
                properties:
                  valid: { type: boolean }
                type: object
        '404':
          description: 'Worker not found'
  /api/operator-post:
    get:
      tags:
        - OperatorPost
      summary: 'List all operator-post relations'
      operationId: bc13062cb9d465bbf605dd4a726bab20
      responses:
        '200':
          description: 'List of relations'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperatorPost'
    post:
      tags:
        - OperatorPost
      summary: 'Create a new operator-post relation'
      operationId: 9c6f8f776f1237f84fb5db3e3af8d672
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - client_id
                - rfid_reading_id
              properties:
                client_id:
                  type: integer
                  example: 1
                rfid_reading_id:
                  type: integer
                  example: 2
                sensor_id:
                  type: integer
                  example: 3
                modbus_id:
                  type: integer
                  example: 4
              type: object
      responses:
        '201':
          description: 'Relation created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorPost'
  '/api/operator-post/{id}':
    get:
      tags:
        - OperatorPost
      summary: 'Get a specific operator-post relation'
      operationId: 5cee21033372514ee3501ba8c037c0ed
      parameters:
        -
          name: id
          in: path
          description: 'Relation ID'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation details'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorPost'
    put:
      tags:
        - OperatorPost
      summary: 'Update an operator-post relation'
      operationId: 8a2ce6e059e0ef8b79788f0112d8c196
      parameters:
        -
          name: id
          in: path
          description: 'Relation ID'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                operator_id:
                  type: integer
                  example: 1
                rfid_reading_id:
                  type: integer
                  example: 2
                sensor_id:
                  type: integer
                  example: 3
                modbus_id:
                  type: integer
                  example: 4
              type: object
      responses:
        '200':
          description: 'Relation updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorPost'
    delete:
      tags:
        - OperatorPost
      summary: 'Delete an operator-post relation'
      operationId: 2fdee5ba99b36ab07a4d3c8dc2daec39
      parameters:
        -
          name: id
          in: path
          description: 'Relation ID'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation deleted successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
  /api/order-notice/store:
    post:
      tags:
        - OrderNotice
      summary: 'Recibir un order notice'
      description: 'Recibe un JSON con la información del pedido'
      operationId: 4411aa8b0ebe23bf35297a5f6cccfdf8
      parameters:
        -
          name: Authorization
          in: header
          description: 'Token de la línea de producción'
          required: true
          schema:
            type: string
            example: 'Bearer your-production-line-token'
      requestBody:
        description: 'JSON con la información del order notice'
        required: true
        content:
          application/json:
            schema:
              required:
                - orderId
                - quantity
                - unit
                - refer
              properties:
                orderId:
                  description: 'ID del pedido'
                  type: integer
                customerOrderId:
                  description: 'ID del pedido del cliente'
                  type: string
                customerReferenceId:
                  description: 'ID de referencia del cliente'
                  type: string
                barcode:
                  description: 'Código de barras'
                  type: string
                quantity:
                  description: 'Cantidad de productos'
                  type: integer
                unit:
                  description: 'Unidad de medida'
                  type: string
                isAuto:
                  description: 'Indica si es un pedido automático'
                  type: integer
                refer:
                  description: 'Información adicional del pedido'
                  properties: { _id: { description: 'ID de referencia', type: string }, company_name: { description: 'Nombre de la empresa', type: string }, id: { description: 'ID del pedido en la base de datos', type: integer }, families: { description: 'Familias relacionadas', type: string }, customerId: { description: 'ID del cliente', type: string }, eanCode: { description: 'Código EAN', type: string }, rfidCode: { description: 'Código RFID', type: string }, descrip: { description: 'Descripción del producto', type: string }, value: { description: 'Valor del producto', type: number, format: float }, magnitude: { description: 'Magnitud (por ejemplo, Masa)', type: string }, envase: { description: 'Envase del producto', type: string }, envase_value: { description: 'Valor del envase', type: string }, measure: { description: 'Unidad de medida del producto', type: string }, groupLevel: { description: 'Detalles de los niveles de grupo', type: array, items: { properties: { id: { description: 'ID del grupo', type: string }, level: { description: 'Nivel del grupo', type: integer }, uds: { description: 'Unidades por nivel', type: integer }, total: { description: 'Total de la medida', type: number, format: float }, measure: { description: 'Unidad de medida del grupo', type: string }, eanCode: { description: 'Código EAN del grupo', type: string }, envase: { description: 'Envase del grupo', type: string } }, type: object } }, standardTime: { description: 'Tiempos estándar de producción', type: array, items: { properties: { value: { description: 'Valor del tiempo estándar', type: string }, magnitude1: { description: 'Magnitud 1 (por ejemplo, Uds/hr)', type: string }, measure1: { description: 'Medida 1 (por ejemplo, uds)', type: string }, magnitude2: { description: 'Magnitud 2', type: string }, measure2: { description: 'Medida 2', type: string }, machineId: { description: 'IDs de máquinas relacionadas', type: array, items: { description: 'ID de la máquina', type: string } } }, type: object } }, createdAt: { description: 'Fecha de creación', type: string, format: date-time }, updatedAt: { description: 'Fecha de última actualización', type: string, format: date-time } }
                  type: object
              type: object
      responses:
        '200':
          description: 'Order notice recibido correctamente'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Order notice processed successfully' }
                type: object
        '400':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: error }
                  message: { type: object }
                type: object
  /api/product-lists:
    get:
      tags:
        - 'Product Lists'
      summary: 'Get all product list items'
      operationId: 97793f6354c780d20363e9e013dc997f
      responses:
        '200':
          description: 'Returns all product list items'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { description: 'Client ID', type: integer }, name: { description: 'Product name', type: string }, optimal_production_time: { description: 'Optimal production time', type: integer }, box_kg: { description: 'Box weight in kilograms', type: number, format: float } }
                  type: object
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                properties:
                  error: { description: 'Error message', type: string }
                type: object
  '/api/product-lists/{id}':
    delete:
      tags:
        - 'Product Lists'
      summary: 'Delete a product list item'
      operationId: f19e776913eed334e4c566296def5a4a
      parameters:
        -
          name: id
          in: path
          description: 'ID of the product to delete'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Product deleted successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '404':
          description: 'Product not found'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/product-lists/update-or-insert:
    post:
      tags:
        - 'Product Lists'
      summary: 'Update or insert a single product list item'
      operationId: a753256c08bc0fd1aa24bf250da69237
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  description: 'Client ID'
                  type: integer
                name:
                  description: 'Product name'
                  type: string
                optimal_production_time:
                  description: 'Optimal production time'
                  type: integer
                box_kg:
                  description: 'Box weight in kilograms'
                  type: number
                  format: float
              type: object
      responses:
        '200':
          description: 'Product list item updated or inserted successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  /api/product-lists/replace-all:
    post:
      tags:
        - 'Product Lists'
      summary: 'Replace all product lists'
      operationId: 604b6c084acc732f39dee76c3047ac99
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  id: { description: 'Client ID', type: integer }
                  name: { description: 'Product name', type: string }
                  optimal_production_time: { description: 'Optimal production time', type: integer }
                  box_kg: { description: 'Box weight in kilograms', type: number, format: float }
                type: object
      responses:
        '200':
          description: 'All product lists replaced successfully'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string }
                type: object
        '422':
          description: 'Validation error'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
  '/api/production-line/status/{token}':
    get:
      tags:
        - Dispositivos
      summary: 'Obtener el estado de la comunicacion con 485 y monitor'
      operationId: 49a10b1ce2e6db7abb783534d8763d24
      parameters:
        -
          name: token
          in: path
          description: 'Token de la línea de producción o SCADA'
          required: true
          schema:
            type: string
            example: abcd1234
      responses:
        '200':
          description: 'Estado de la línea de producción obtenido con éxito.'
          content:
            application/json:
              schema:
                properties:
                  production_line: { type: string, example: 'Linea A' }
                  monitor_connections: { type: array, items: { properties: { name: { type: string, example: 'Monitor A' }, last_status: { type: string, example: active } }, type: object } }
                type: object
        '404':
          description: 'Token no encontrado o conexiones de monitor no encontradas.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Production line not found.' }
                  searched_token: { type: string, example: abcd1234 }
                  production_line_id: { type: integer, example: 1, nullable: true }
                type: object
        '500':
          description: 'Error interno del servidor.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'An error occurred: Internal server error.' }
                  searched_token: { type: string, example: abcd1234 }
                type: object
  /api/production-orders:
    get:
      tags:
        - ProductionOrders
      summary: 'Listar órdenes de producción'
      operationId: 785030f3274cb82f979c3f193d434b4d
      parameters:
        -
          name: token
          in: query
          description: 'Token único de la línea de producción'
          required: true
          schema:
            type: string
            example: abcd1234
        -
          name: status
          in: query
          description: 'Filtrar por estado de la orden'
          required: false
          schema:
            type: integer
            example: 1
        -
          name: sort_by
          in: query
          description: 'Columna para ordenar'
          required: false
          schema:
            type: string
            example: orden
        -
          name: sort_direction
          in: query
          description: 'Dirección de ordenación (asc o desc)'
          required: false
          schema:
            type: string
            example: desc
      responses:
        '200':
          description: 'Lista de órdenes de producción'
          content:
            application/json:
              schema:
                properties:
                  current_page: { type: integer }
                  data: { type: array, items: { properties: { id: { type: integer }, order_id: { type: string }, status: { type: integer }, box: { type: integer }, units_box: { type: integer }, orden: { type: integer } }, type: object } }
                  total: { type: integer }
                type: object
        '400':
          description: 'Token no proporcionado o no válido'
    post:
      tags:
        - ProductionOrders
      summary: 'Crear una nueva orden de producción'
      operationId: bd9efecb678eb6de0df12ac1247f9897
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                production_line_id:
                  type: integer
                  example: 1
                order_id:
                  type: string
                  example: '231118'
                status:
                  type: integer
                  example: 1
                box:
                  type: integer
                  example: 945
                units_box:
                  type: integer
                  example: 30
                units:
                  type: integer
                  example: 28350
                orden:
                  type: integer
                  example: 0
              type: object
      responses:
        '201':
          description: 'Orden creada exitosamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 'Orden creada exitosamente.' }
                  data: { properties: { id: { type: integer } }, type: object }
                type: object
  /api/kanban/orders:
    get:
      tags:
        - ProductionOrders
      summary: 'Obtener órdenes optimizadas para el tablero Kanban'
      operationId: 15e959c700a937f059d9301c5f56654d
      parameters:
        -
          name: token
          in: query
          description: 'Token único de la línea de producción'
          required: true
          schema:
            type: string
            example: abcd1234
      responses:
        '200':
          description: 'Lista de órdenes optimizada para el Kanban'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { properties: { id: { type: integer }, status: { type: string }, updated_at: { type: string, format: date-time } }, type: object } }
                type: object
  '/api/production-orders/{id}':
    get:
      tags:
        - ProductionOrders
      summary: 'Obtener detalles de una orden específica'
      operationId: 2c2876ad629eff25e357a29fc1d6dfbb
      parameters:
        -
          name: id
          in: path
          description: 'ID de la orden de producción'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Detalles de la orden de producción'
          content:
            application/json:
              schema:
                properties:
                  id: { type: integer }
                  order_id: { type: string }
                  status: { type: integer }
                  box: { type: integer }
                  units_box: { type: integer }
                  orden: { type: integer }
                type: object
        '404':
          description: 'Orden no encontrada'
    delete:
      tags:
        - ProductionOrders
      summary: 'Eliminar una orden de producción'
      operationId: 37fb0555e48a6c7920bb0fa8f1bdbf59
      parameters:
        -
          name: id
          in: path
          description: 'ID de la orden de producción'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Orden eliminada exitosamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 'Orden eliminada exitosamente.' }
                type: object
        '404':
          description: 'Orden no encontrada'
    patch:
      tags:
        - ProductionOrders
      summary: 'Actualizar orden o estado de una orden'
      operationId: 3a9675b159d693bb4dc8028a9565b0e8
      parameters:
        -
          name: id
          in: path
          description: 'ID de la orden de producción'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                orden:
                  description: 'Nuevo valor del orden'
                  type: integer
                  example: 5
                status:
                  description: 'Nuevo estado de la orden'
                  type: integer
                  example: 1
              type: object
      responses:
        '200':
          description: 'Orden actualizada correctamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  message: { type: string, example: 'Orden actualizada exitosamente.' }
                  data: { properties: { id: { type: integer } }, type: object }
                type: object
        '404':
          description: 'Orden no encontrada'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  message: { type: string, example: 'Orden no encontrada.' }
                type: object
  /api/topflow-production-order:
    post:
      tags:
        - ProductionOrder-Topflow
      summary: 'Crea una nueva orden de producción'
      description: 'Crea una nueva orden de producción.'
      operationId: 7519e6bfca018d3816017a32ef7832f2
      requestBody:
        description: 'Datos para crear una orden de producción'
        required: true
        content:
          application/json:
            schema:
              required:
                - mongoId
                - client_id
                - code
                - deliveryDate
                - referId
                - quantity
                - paletsQtty
              properties:
                mongoId:
                  description: 'Identificador interno (se asignará al campo _id)'
                  type: string
                  example: 646b247f4fd52c364ceaee6b
                client_id:
                  description: 'Número de Pedido Cliente en XGest + numerador de línea de pedido'
                  type: string
                  example: LineaPedido.X
                customerOrderId:
                  description: 'Número de Pedido del Cliente'
                  type: string
                  example: NumPedidoCliente
                clientId:
                  description: 'Referencia del Pedido del Cliente'
                  type: string
                  example: ClienteID
                code:
                  description: 'Código de Barras / RFID'
                  type: string
                  example: '1231231231231'
                deliveryDate:
                  description: 'Fecha de Expedición'
                  type: string
                  format: date
                  example: '2023-05-30'
                referId:
                  description: 'Referencia o Artículo'
                  type: string
                  example: ArticuloId
                quantity:
                  description: Cantidad
                  type: integer
                  example: 25
                paletsQtty:
                  description: 'Número de palets'
                  type: integer
                  example: 3
              type: object
      responses:
        '201':
          description: 'Orden de producción creada exitosamente'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'Número de Pedido Cliente transformado', type: string, example: LineaPedido.X }
                  customerOrderId: { type: string, example: NumPedidoCliente }
                  clientId: { type: string, example: ClienteID }
                  code: { type: string, example: '1231231231231' }
                  deliveryDate: { type: string, format: date, example: '2023-05-30' }
                  referId: { type: string, example: ArticuloId }
                  quantity: { type: integer, example: 25 }
                  paletsQtty: { type: integer, example: 3 }
                  createdAt: { type: string, format: date-time, example: '2023-05-22T08:14:55.219Z' }
                  updatedAt: { type: string, format: date-time, example: '2023-05-22T08:14:55.219Z' }
                type: object
        '422':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Los datos proporcionados son inválidos.' }
                type: object
  '/api/topflow-production-order/{mongoId}':
    get:
      tags:
        - ProductionOrder-Topflow
      summary: 'Obtiene una orden de producción específica'
      description: 'Obtiene una orden de producción específica y transforma "client_id" a "id".'
      operationId: 76981926ba357c93373ef8664c7c97a7
      parameters:
        -
          name: _id
          in: path
          description: 'Identificador interno (MongoId) de la orden de producción'
          required: true
          schema:
            type: string
            example: 646b247f4fd52c364ceaee6b
      responses:
        '200':
          description: 'Detalles de la orden de producción'
          content:
            application/json:
              schema:
                properties:
                  _id: { description: 'Número de Pedido Cliente transformado', type: string, example: LineaPedido.X }
                  customerOrderId: { type: string, example: NumPedidoCliente }
                  id: { type: string, example: ClienteID }
                  code: { type: string, example: '1231231231231' }
                  deliveryDate: { type: string, format: date, example: '2023-05-30' }
                  referId: { type: string, example: ArticuloId }
                  quantity: { type: integer, example: 25 }
                  paletsQtty: { type: integer, example: 3 }
                  createdAt: { type: string, format: date-time, example: '2023-05-22T08:14:55.219Z' }
                  updatedAt: { type: string, format: date-time, example: '2023-05-22T08:14:55.219Z' }
                type: object
        '404':
          description: 'Orden de producción no encontrada'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Orden de producción no encontrada.' }
                type: object
  /api/reference-Topflow:
    get:
      tags:
        - Reference-Topflow
      summary: 'Obtiene la lista de referencias'
      description: 'Obtiene la lista de referencias.'
      operationId: 5d598a3060053e8c1b80f69f0a1d278b
      responses:
        '200':
          description: 'Lista de referencias'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reference'
    post:
      tags:
        - Reference-Topflow
      summary: 'Crea una nueva referencia'
      description: 'Crea una nueva referencia.'
      operationId: 68b373e37eb2cc94a326042340d19d49
      requestBody:
        description: 'Datos para crear la referencia'
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - customerId
                - families
                - eanCode
                - rfidCode
                - description
                - value
                - magnitude
                - measure
                - envase
                - tolerancia_min
                - tolerancia_max
                - groupLevel
              properties:
                id:
                  type: string
                  example: REFER1
                customerId:
                  type: string
                  example: REFER1
                families:
                  type: string
                  example: FamiliaPrueba
                eanCode:
                  type: string
                  example: '1234567890123'
                rfidCode:
                  type: string
                  example: '1234567890123'
                description:
                  type: string
                  example: 'Descripción de la referencia'
                value:
                  type: integer
                  example: 123
                magnitude:
                  type: string
                  example: Aceleración
                measure:
                  type: string
                  example: m/s2
                envase:
                  type: string
                  example: ENVASE1
                tolerancia_min:
                  type: number
                  format: float
                  example: 2
                tolerancia_max:
                  type: number
                  format: float
                  example: 2
                groupLevel:
                  type: array
                  items: { required: [id_group, level, uds, total, measure, eanCode, envase], properties: { id_group: { type: string, example: refer1 }, level: { type: integer, example: 1 }, uds: { type: integer, example: 12 }, total: { type: string, example: '2 * 12 = 24' }, measure: { type: string, example: 'g (g-force)' }, eanCode: { type: string, example: '123123123322' }, envase: { type: string, example: SINENVASE } }, type: object }
              type: object
      responses:
        '201':
          description: 'Referencia creada exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        '422':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Los datos proporcionados son inválidos.' }
                type: object
  '/api/reference-Topflow/{id}':
    get:
      tags:
        - Reference-Topflow
      summary: 'Obtiene una referencia específica'
      description: 'Obtiene una referencia específica.'
      operationId: 30ebfbbda0a97ea961ab138aac0fa0eb
      parameters:
        -
          name: id
          in: path
          description: 'ID de la referencia'
          required: true
          schema:
            type: string
            example: REFER1
      responses:
        '200':
          description: 'Detalles de la referencia'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
        '404':
          description: 'Referencia no encontrada'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Referencia no encontrada.' }
                type: object
  /api/rfid-readings:
    get:
      tags:
        - 'RFID Readings'
      summary: 'Listar todas las lecturas RFID'
      operationId: e6820e609f71245cbe9c6abde6b77c07
      responses:
        '200':
          description: 'Lista de lecturas RFID'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { id: { description: 'ID de la lectura RFID', type: integer }, epc: { description: 'Código EPC único', type: string }, name: { description: 'Nombre del RFID', type: string }, production_line_id: { description: 'ID de la línea de producción', type: integer, nullable: true } }
                  type: object
    post:
      tags:
        - 'RFID Readings'
      summary: 'Crear una nueva lectura RFID'
      operationId: 58146e1cd3090e0635db32c8ff1cb5d1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - epc
              properties:
                epc:
                  description: 'Código EPC único'
                  type: string
                name:
                  description: 'Nombre del RFID'
                  type: string
                  nullable: true
                production_line_id:
                  description: 'ID de la línea de producción'
                  type: integer
                  nullable: true
              type: object
      responses:
        '201':
          description: 'RFID creado correctamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfidReading'
        '422':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  error: { description: 'Mensaje de error', type: string }
                type: object
  '/api/rfid-readings/{id}':
    get:
      tags:
        - 'RFID Readings'
      summary: 'Obtener una lectura RFID específica'
      operationId: 0d466732954c28816144d7e2721e7537
      parameters:
        -
          name: id
          in: path
          description: 'ID de la lectura RFID'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Detalles de la lectura RFID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfidReading'
        '404':
          description: 'RFID no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { description: 'Mensaje de error', type: string }
                type: object
    put:
      tags:
        - 'RFID Readings'
      summary: 'Actualizar una lectura RFID existente'
      operationId: bf97cb124e128dd1edba470c85d242f2
      parameters:
        -
          name: id
          in: path
          description: 'ID de la lectura RFID'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                epc:
                  description: 'Código EPC único'
                  type: string
                name:
                  description: 'Nombre del RFID'
                  type: string
                  nullable: true
                production_line_id:
                  description: 'ID de la línea de producción'
                  type: integer
                  nullable: true
              type: object
      responses:
        '200':
          description: 'RFID actualizado correctamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfidReading'
        '404':
          description: 'RFID no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { description: 'Mensaje de error', type: string }
                type: object
    delete:
      tags:
        - 'RFID Readings'
      summary: 'Eliminar una lectura RFID'
      operationId: a9b280440c9439aa2f4f356ef5f4a924
      parameters:
        -
          name: id
          in: path
          description: 'ID de la lectura RFID'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'RFID eliminado correctamente'
          content:
            application/json:
              schema:
                properties:
                  message: { description: 'Mensaje de éxito', type: string }
                type: object
        '404':
          description: 'RFID no encontrado'
          content:
            application/json:
              schema:
                properties:
                  error: { description: 'Mensaje de error', type: string }
                type: object
  '/api/scada/{token}/material-types':
    get:
      tags:
        - 'Scada Material Types'
      summary: 'Listar materiales de SCADA'
      operationId: 81fdcb397aaab780f15bde17db2994d8
      parameters:
        -
          name: token
          in: path
          description: 'Token de SCADA'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Listado exitoso'
        '404':
          description: 'SCADA no encontrado'
    post:
      tags:
        - 'Scada Material Types'
      summary: 'Crear material en SCADA'
      operationId: 103a2f14be552401e32813f521aee0a5
      parameters:
        -
          name: token
          in: path
          description: 'Token de SCADA'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - density
              properties:
                name:
                  type: string
                density:
                  type: string
                service_type:
                  type: integer
                client_id:
                  type: string
              type: object
      responses:
        '201':
          description: 'Creado exitosamente'
        '404':
          description: 'SCADA no encontrado'
  '/api/scada/{token}/material-types/{id}':
    get:
      tags:
        - 'Scada Material Types'
      summary: 'Obtener un material específico'
      operationId: 44c5ac7db5a45a975a2dac4dfa1684db
      parameters:
        -
          name: token
          in: path
          description: 'Token de SCADA'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID del material'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Material encontrado'
        '404':
          description: 'SCADA o material no encontrado'
    put:
      tags:
        - 'Scada Material Types'
      summary: 'Actualizar un material'
      operationId: b452fe2bb6b1fadd726a5601039b7a41
      parameters:
        -
          name: token
          in: path
          description: 'Token de SCADA'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID del material'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                density:
                  type: string
                service_type:
                  type: integer
                client_id:
                  type: string
              type: object
      responses:
        '200':
          description: 'Actualizado exitosamente'
        '404':
          description: 'SCADA o material no encontrado'
    delete:
      tags:
        - 'Scada Material Types'
      summary: 'Eliminar un material'
      operationId: 0bce9f5d953431183ece4927b6ffa5fe
      parameters:
        -
          name: token
          in: path
          description: 'Token de SCADA'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID del material'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'Eliminado exitosamente'
        '404':
          description: 'SCADA o material no encontrado'
  '/api/scada-orders/{token}':
    get:
      tags:
        - 'SCADA Orders'
      summary: 'Obtener órdenes por token'
      operationId: 0418b9e6e4235726f7a199e634a52f64
      parameters:
        -
          name: token
          in: path
          description: 'Token único asociado a la SCADA'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Éxito
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  scada_id: { type: integer }
                  scada_name: { type: string }
                  orders: { type: array, items: { type: object } }
                type: object
        '404':
          description: 'Token inválido o SCADA no encontrada'
  /api/scada-orders/update:
    post:
      tags:
        - 'SCADA Orders'
      summary: 'Actualizar estado de la orden'
      operationId: e31bc407a12b85abceb3876ec1c4f2f4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                order_id:
                  type: string
                status:
                  type: integer
                orden:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Estado actualizado correctamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
        '404':
          description: 'Orden no encontrada'
  /api/scada-orders/delete:
    delete:
      tags:
        - 'SCADA Orders'
      summary: 'Eliminar una orden'
      operationId: 8dbc2ee05bbec09888aac64cfefe5633
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                order_id:
                  type: string
              type: object
      responses:
        '200':
          description: 'Orden eliminada correctamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
        '404':
          description: 'Orden no encontrada'
  '/api/scada-orders/{scadaOrderId}/lines':
    get:
      tags:
        - 'SCADA Orders'
      summary: 'Obtener estado de las líneas de una orden'
      operationId: e4a86ff2881d83efec54242ce3dac6a9
      parameters:
        -
          name: scadaOrderId
          in: path
          description: 'ID de la orden en SCADA'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Éxito
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  status: { type: string }
                  lines: { type: array, items: { type: object } }
                type: object
        '404':
          description: 'No se encontraron líneas asociadas para este ID de SCADA Order'
  /api/scada-orders/process/update-used:
    post:
      tags:
        - 'SCADA Orders'
      summary: "Actualizar el campo 'used' de un proceso específico"
      operationId: c64eb1f531b89b4edb7e50d7c466489a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  type: integer
                  example: 4264
                scada_order_list_id:
                  type: integer
                  example: 1499
                scada_material_type_id:
                  type: integer
                  example: 3
                used:
                  type: integer
                  enum: [0, 1]
                  example: 1
              type: object
      responses:
        '200':
          description: 'Proceso actualizado correctamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
        '404':
          description: 'Proceso no encontrado'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
  /api/register-server:
    post:
      tags:
        - 'Server Registration'
      summary: 'Registra un nuevo servidor'
      description: 'Registra un nuevo servidor en host_lists.'
      operationId: 07037f70e9b8fe986aad9e140bfd36b4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - host
                - name
              properties:
                host:
                  type: string
                  example: 192.168.1.100
                name:
                  type: string
                  example: 'Servidor Xmart'
                emails:
                  type: string
                  example: admin@example.com
                phones:
                  type: string
                  example: '1234567890'
                telegrams:
                  type: string
                  example: '@xmart_server'
                token:
                  type: string
                  example: opcional-token-personalizado
              type: object
      responses:
        '201':
          description: 'Servidor registrado exitosamente'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Server registered successfully.' }
                  data: { type: object }
                type: object
        '422':
          description: 'Error de validación'
  /api/shift-history:
    get:
      tags:
        - 'Shift History'
      summary: 'Obtiene el historial de turnos paginado'
      operationId: ff100227ed5c4f732616e3634224757b
      responses:
        '200':
          description: 'Historial de turnos paginado'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { type: object } }
                  links: { type: object }
                  meta: { type: object }
                type: object
  '/api/shift-history/production-line/{id}':
    get:
      tags:
        - 'Shift History'
      summary: 'Obtiene el historial de turnos para una línea de producción específica'
      operationId: f3fb5d4fbc90346ed9500684dd1a66ef
      parameters:
        -
          name: id
          in: path
          description: 'ID de la línea de producción'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Historial de turnos de la línea de producción'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { type: object } }
                  links: { type: object }
                  meta: { type: object }
                type: object
  '/api/shift-history/production-line/{token}/last':
    get:
      tags:
        - 'Shift History'
      summary: 'Obtiene la última entrada de shift_history para una línea de producción por token, incluyendo datos del operario y posible cálculo de pausa.'
      operationId: 896b055ecda030fdf9b072df96e6412c
      parameters:
        -
          name: token
          in: path
          description: 'Token de la línea de producción'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Operación exitosa. Puede incluir 'shift_start_date' y 'total_pause_duration_seconds' si el último registro no es un inicio de turno."
          content:
            application/json:
              schema:
                properties:
                  data: { description: 'Último registro de ShiftHistory con relaciones cargadas.', type: object }
                  shift_start_date: { description: 'Timestamp del último inicio de turno (si aplica).', type: string, format: date-time }
                  total_pause_duration_seconds: { description: 'Duración total de las pausas en segundos desde el último inicio de turno (si aplica).', type: integer }
                type: object
        '404':
          description: 'No se encontró la línea de producción, el historial de turnos o un inicio de turno previo.'
  /api/supplier-order/store:
    post:
      tags:
        - 'Supplier Order'
      summary: 'Registrar pedido de proveedor'
      description: "Endpoint para registrar pedidos de proveedores.\n\nURL: https://domain/api/supplier-order/store\n\nEjemplo de JSON:\n{\n\"supplierOrderId\": 231167,\n\"orderLine\": \"231167.1\",\n\"quantity\": 1,\n\"unit\": \"Palet\",\n\"barcode\": \"ean 128\",\n\"refer\": {\n\"id\": \"Z465\",\n\"company_name\": \"Nombre Proveedor\",\n\"descrip\": \"Descripción de la materia prima\",\n\"value\": 300,\n\"measure\": \"Kg\"\n}\n}\n\nComentario de cada campo:\n- supplierOrderId: Identificador del pedido que se realiza al proveedor.\n- orderLine: Línea del pedido (número de orden concatenado con el número de línea).\n- quantity: Cantidad de unidades solicitadas.\n- unit: Unidad de medida, en este caso \"Palet\".\n- barcode: Código de barras o identificación RFID.\n- refer: Objeto con información adicional sobre la materia prima."
      operationId: f4e16fe6636fdaf4c6d17908738bbdba
      requestBody:
        description: 'Datos para registrar el pedido de proveedor'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierOrder'
      responses:
        '201':
          description: 'Pedido de proveedor registrado exitosamente'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierOrder'
        '422':
          description: 'Error de validación'
          content:
            application/json:
              schema:
                properties:
                  message: { type: string, example: 'Los datos proporcionados son inválidos.' }
                type: object
  /api/reboot:
    post:
      tags:
        - Sistema
      summary: 'Reiniciar el sistema'
      operationId: d55627f1840b7d732b05358ca0460e2a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
              type: object
      responses:
        '200':
          description: 'El sistema se está reiniciando.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error al intentar reiniciar el sistema.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          bearerAuth: []
  /api/poweroff:
    post:
      tags:
        - Sistema
      summary: 'Apagar el sistema'
      operationId: fcad9aa149969074ed2cf427a86e3994
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
              type: object
      responses:
        '200':
          description: 'El sistema se está apagando.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error al intentar apagar el sistema.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          bearerAuth: []
  /api/server-stats:
    get:
      tags:
        - Sistema
      summary: 'Obtener estadísticas del servidor'
      operationId: b0fdf6237f283731c2ba4db819f253e3
      parameters:
        -
          name: Authorization
          in: header
          description: "Token de autorización '"
          required: true
          schema:
            type: string
            example: 'Token de autorización'
      responses:
        '200':
          description: 'Estadísticas del servidor obtenidas con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  cpu_usage: { type: string, example: 15% }
                  ram_usage: { type: string, example: 1024MB/4096MB }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/restart-supervisor:
    post:
      tags:
        - Supervisor
      summary: 'Reiniciar todos los procesos de Supervisor'
      operationId: 61400261fcd97e91c9256baf2b36850f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
              type: object
      responses:
        '200':
          description: 'Supervisor reiniciado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error al reiniciar Supervisor.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          bearerAuth: []
  /api/start-supervisor:
    post:
      tags:
        - Supervisor
      summary: 'Iniciar todos los procesos de Supervisor'
      operationId: 5c494ab8e17b2482ec9739d9c6a0a3ed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
              type: object
      responses:
        '200':
          description: 'Supervisor iniciado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error al iniciar Supervisor.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          bearerAuth: []
  /api/stop-supervisor:
    post:
      tags:
        - Supervisor
      summary: 'Detener todos los procesos de Supervisor'
      operationId: 98132799a65df6dc6be3d2ac562e92b7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
              type: object
      responses:
        '200':
          description: 'Supervisor apagado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string }
                  message: { type: string }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
        '500':
          description: 'Error al apagar Supervisor.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string }
                type: object
      security:
        -
          bearerAuth: []
  /api/restart-485-Swift:
    post:
      tags:
        - Dispositivos
      summary: 'Reiniciar el dispositivo SWIFT 485'
      operationId: f550b4b194e9f41e17d877701948bc23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  description: 'Token de autorización'
                  type: string
                  example: TU_TOKEN_DE_AUTORIZACION
              type: object
      responses:
        '200':
          description: 'SWIFT 485 reiniciado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'SWIFT 485 reiniciado con éxito.' }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al reiniciar SWIFT 485.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al reiniciar SWIFT 485. Detalles: Permiso denegado.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/supervisor-status:
    get:
      tags:
        - Supervisor
      summary: 'Obtener el estado de todos los procesos de Supervisor'
      operationId: 5e9a53ef2290b0eab6eb69166b77219e
      responses:
        '200':
          description: 'Estado de Supervisor obtenido con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  supervisor_status: { type: array, items: { type: string, example: 'program_name RUNNING pid 1234' } }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al obtener el estado de Supervisor.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al obtener el estado de Supervisor.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/check-485-service:
    get:
      tags:
        - Dispositivos
      summary: 'Verificar el estado del servicio 485.service'
      operationId: 3d0a7f182b068a8490c610c430426e07
      responses:
        '200':
          description: 'Estado del servicio 485.service obtenido con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Servicio encontrado' }
                  service_status: { type: string, example: active }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al verificar el estado del servicio.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al verificar el estado del servicio.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/install-485-service:
    post:
      tags:
        - Dispositivos
      summary: 'Crear y arrancar el servicio 485.service'
      operationId: 772a5b8c661cf6208d67fe54fb036770
      responses:
        '200':
          description: 'Servicio 485 creado y arrancado con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Servicio creado y arrancado con éxito.' }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al crear o arrancar el servicio.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al crear o arrancar el servicio.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/app-update:
    post:
      tags:
        - Aplicación
      summary: 'Actualizar la aplicación ejecutando el script update.sh'
      operationId: 232e815f537ea26d2e79bfd1c0c3cb1c
      responses:
        '200':
          description: 'Actualización iniciada correctamente.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Script de actualización ejecutado correctamente.' }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al ejecutar el script de actualización.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al ejecutar el script de actualización.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/verne-update:
    post:
      tags:
        - Aplicación
      summary: 'Actualizar VerneMQ ejecutando el script verne.sh'
      operationId: ccd47db8be7f0aa5a7a47846759dca2c
      responses:
        '200':
          description: 'Actualización de VerneMQ iniciada correctamente.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Script de actualización de VerneMQ ejecutado correctamente.' }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al ejecutar el script de actualización de VerneMQ.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al ejecutar el script de actualización de VerneMQ.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/server-ips:
    get:
      tags:
        - Servidor
      summary: 'Obtener las direcciones IP del servidor'
      operationId: 85fe1fd26387af25ef683bd0f765406c
      responses:
        '200':
          description: 'Direcciones IP obtenidas con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  ips: { type: array, items: { type: string, example: 192.168.1.100 } }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al obtener las direcciones IP.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al obtener las direcciones IP.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/update-env:
    post:
      tags:
        - Servidor
      summary: 'Actualizar configuraciones en el archivo .env'
      operationId: ba9b4ffd37b595a053c38165f22618d4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mysql_server:
                  type: string
                  example: 127.0.0.1
                mysql_port:
                  type: string
                  example: '3306'
                mysql_db:
                  type: string
                  example: my_database
                mysql_user:
                  type: string
                  example: root
                mysql_password:
                  type: string
                  example: secure_password
              type: object
      responses:
        '200':
          description: 'Configuración actualizada correctamente.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Configuración actualizada correctamente.' }
                type: object
        '403':
          description: 'Token de autorización inválido.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Token de autorización inválido.' }
                type: object
        '500':
          description: 'Error al actualizar el archivo .env.'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'Error al actualizar el archivo .env.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/check-db-connection:
    post:
      tags:
        - 'Base de Datos'
      summary: 'Verificar la conexión a la base de datos MySQL'
      operationId: 1886d2ecdd7d3a9e8e0443975b4a18b8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mysql_server:
                  type: string
                  example: 127.0.0.1
                mysql_port:
                  type: string
                  example: '3306'
                mysql_db:
                  type: string
                  example: my_database
                mysql_user:
                  type: string
                  example: root
                mysql_password:
                  type: string
                  example: secure_password
              type: object
      responses:
        '200':
          description: 'Conexión realizada con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Conexión realizada con éxito.' }
                type: object
        '500':
          description: 'Error al conectar con la base de datos.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: error }
                  message: { type: string, example: 'No se pudo conectar a la base de datos.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/verify-and-sync-database:
    post:
      tags:
        - 'Base de Datos'
      summary: 'Verificar y sincronizar la base de datos externa'
      operationId: bb5d150d9b5e3a77a717e66fe24493b5
      responses:
        '200':
          description: 'Sincronización realizada con éxito.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: success }
                  message: { type: string, example: 'Base de datos verificada y sincronizada correctamente.' }
                type: object
        '500':
          description: 'Error al verificar o sincronizar la base de datos.'
          content:
            application/json:
              schema:
                properties:
                  status: { type: string, example: error }
                  message: { type: string, example: 'Detalles del error.' }
                type: object
      security:
        -
          bearerAuth: []
  /api/publish-message:
    post:
      tags:
        - 'TCP Operations'
      summary: 'Publica un mensaje en el servidor TCP'
      operationId: 86e3f0ac0439f87f0b8dfa8b9e82eb7a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - message
              properties:
                message:
                  type: string
                  example: "'model': 'api_queue_print','token': 'bbc3d2fd39027b9fsdsdsd', 'value':'1', 'url_back': 'tcp', 'token_back': 'TU-BARCODER-O-LO-QUE-NECESITAS_IDENTIFICADOR'"
              type: object
      responses:
        '200':
          description: 'Mensaje enviado correctamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: string, example: 'Mensaje enviado correctamente' }
                type: object
        '500':
          description: 'Hubo un error al enviar el mensaje'
  /api/transfer-external-db:
    post:
      tags:
        - TransferExternalDb
      summary: 'Transferir datos a la base de datos externa'
      description: 'Transferir Datos a la Base de Datos Externa'
      operationId: fb47ef20a223c0d72581a52f38ce6af2
      requestBody:
        description: 'Datos necesarios para la transferencia'
        required: true
        content:
          application/json:
            schema:
              required:
                - orderId
              properties:
                orderId:
                  type: string
                  example: ORD123456
                externalSend:
                  type: boolean
                  example: true
              type: object
      responses:
        '200':
          description: 'Transferencia exitosa'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  orderId: { type: string, example: ORD123456 }
                  data: { type: object }
                type: object
        '400':
          description: 'Error en el JSON o datos inválidos'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'JSON de production_order inválido.' }
                type: object
        '404':
          description: 'No se encontró production_order para el orderId proporcionado'
          content:
            application/json:
              schema:
                properties:
                  error: { type: string, example: 'No se encontró production_order para el orderId proporcionado.' }
                type: object
        '500':
          description: 'Error interno del servidor'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  error: { type: string, example: 'Error en el procesamiento de la orden.' }
                type: object
  /api/workers-export/generate-excel:
    get:
      tags:
        - WorkersExport
      summary: 'Genera un archivo Excel con el informe de operadores agrupado'
      operationId: d3e6cdd59d980683c66d3befd9b8dbb2
      parameters:
        -
          name: from_date
          in: query
          description: 'Fecha de inicio en formato YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date
        -
          name: to_date
          in: query
          description: 'Fecha de fin en formato YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date
        -
          name: filter_posts
          in: query
          description: 'Si es true, solo incluye operadores con puestos activos'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: 'Descarga del archivo Excel'
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {  }
        '422':
          description: 'Errores de validación'
        '500':
          description: 'Error interno del servidor'
  /api/workers-export/generate-pdf:
    get:
      tags:
        - WorkersExport
      summary: 'Genera un archivo PDF con el informe de operadores agrupado'
      operationId: c9d1d9021262ca0f049f0be696afb4a2
      parameters:
        -
          name: from_date
          in: query
          description: 'Fecha de inicio en formato YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date
        -
          name: to_date
          in: query
          description: 'Fecha de fin en formato YYYY-MM-DD'
          required: true
          schema:
            type: string
            format: date
        -
          name: filter_posts
          in: query
          description: 'Si es true, solo incluye operadores con puestos activos'
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: 'Descarga del archivo PDF'
          content:
            application/pdf: {  }
        '422':
          description: 'Errores de validación'
        '500':
          description: 'Error interno del servidor'
  /api/workers-export/send-reports-by-email:
    post:
      tags:
        - WorkersExport
      summary: 'Envía por correo los informes de operadores para la fecha actual'
      operationId: 9b5a1c6a4f6bb7267bd5648448660bde
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  description: 'Correo electrónico del destinatario'
                  type: string
                  format: email
                filter_posts:
                  description: 'Si es true, solo incluye operadores con puestos activos'
                  type: boolean
                  default: true
              type: object
      responses:
        '200':
          description: 'Correo programado exitosamente'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
        '422':
          description: 'Errores de validación'
        '500':
          description: 'Error interno del servidor'
  /api/workers-export/complete-list:
    get:
      tags:
        - WorkersExport
      summary: 'Obtiene la lista completa de operadores con sus posts en el rango de fechas'
      operationId: 1b1916a22cad0d28a0d26f3a0db343ad
      parameters:
        -
          name: from_date
          in: query
          description: 'Fecha de inicio en formato YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
        -
          name: to_date
          in: query
          description: 'Fecha de fin en formato YYYY-MM-DD'
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 'Listado de operadores con posts'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  data: { type: array, items: { $ref: '#/components/schemas/Operator' } }
                type: object
        '500':
          description: 'Error interno del servidor'
  /api/workers-export/send-assignment-list-by-email:
    post:
      tags:
        - WorkersExport
      summary: 'Envía por correo el listado de asignación de puestos'
      operationId: b7c115e6c371645ded4c25560974eae7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  description: 'Correo electrónico del destinatario'
                  type: string
                  format: email
              type: object
      responses:
        '200':
          description: 'Correo de asignación programado'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean }
                  message: { type: string }
                type: object
        '422':
          description: 'Errores de validación'
        '500':
          description: 'Error interno del servidor'
components:
  schemas:
    GroupLevel:
      required:
        - id_group
        - level
        - uds
        - total
        - measure
        - eanCode
        - envase
      properties:
        id_group:
          type: string
          example: refer1
        level:
          type: integer
          example: 1
        uds:
          type: integer
          example: 12
        total:
          type: string
          example: '2 * 12 = 24'
        measure:
          type: string
          example: 'g (g-force)'
        eanCode:
          type: string
          example: '123123123322'
        envase:
          type: string
          example: SINENVASE
      type: object
    Reference:
      required:
        - id
        - customerId
        - families
        - eanCode
        - rfidCode
        - description
        - value
        - magnitude
        - measure
        - envase
        - tolerancia_min
        - tolerancia_max
      properties:
        id:
          type: string
          example: REFER1
        customerId:
          type: string
          example: REFER1
        families:
          type: string
          example: FamiliaPrueba
        eanCode:
          type: string
          example: '1234567890123'
        rfidCode:
          type: string
          example: '1234567890123'
        description:
          type: string
          example: 'Descripción de la referencia'
        value:
          type: integer
          example: 123
        magnitude:
          type: string
          example: Aceleración
        measure:
          type: string
          example: m/s2
        envase:
          type: string
          example: ENVASE1
        tolerancia_min:
          type: number
          format: float
          example: 2
        tolerancia_max:
          type: number
          format: float
          example: 2
        groupLevels:
          type: array
          items:
            $ref: '#/components/schemas/GroupLevel'
      type: object
    Refer:
      required:
        - id
        - company_name
        - descrip
        - value
        - measure
      properties:
        id:
          description: 'Código único de la referencia'
          type: string
          example: Z465
        company_name:
          description: 'Nombre del proveedor'
          type: string
          example: 'Nombre Proveedor'
        descrip:
          description: 'Descripción detallada de la materia prima'
          type: string
          example: 'Descripción de la materia prima'
        value:
          description: 'Valor o peso asignado a la referencia'
          type: number
          format: float
          example: 300
        measure:
          description: 'Unidad de medida del valor'
          type: string
          example: Kg
      type: object
    SupplierOrder:
      required:
        - supplierOrderId
        - orderLine
        - quantity
        - unit
        - barcode
        - refer
      properties:
        supplierOrderId:
          description: 'Identificador del pedido que se realiza al proveedor'
          type: integer
          example: 231167
        orderLine:
          description: 'Línea del pedido (número de orden concatenado con el número de línea)'
          type: string
          example: '231167.1'
        quantity:
          description: 'Cantidad de unidades solicitadas para esa línea'
          type: integer
          example: 1
        unit:
          description: 'Unidad de medida en la que se expresa la cantidad'
          type: string
          example: Palet
        barcode:
          description: 'Código de barras o identificación RFID asociado al pedido'
          type: string
          example: 'ean 128'
        refer:
          $ref: '#/components/schemas/Refer'
      type: object
tags:
  -
    name: 'Barcode Scans'
    description: 'API para gestionar escaneos de códigos de barras'
  -
    name: Barcode
    description: Barcode
  -
    name: 'Order Notice'
    description: 'Order Notice'
  -
    name: 'Barcode Info'
    description: 'Barcode Info'
  -
    name: 'Control Weight'
    description: 'Control Weight'
  -
    name: 'Production Lines'
    description: 'Production Lines'
  -
    name: 'Modbus Info'
    description: 'Modbus Info'
  -
    name: Modbus
    description: Modbus
  -
    name: OrderStats
    description: OrderStats
  -
    name: 'Scada Materials'
    description: 'Scada Materials'
  -
    name: Sensores
    description: Sensores
  -
    name: Queue
    description: Queue
  -
    name: WhatsApp
    description: WhatsApp
  -
    name: 'Supplier Order'
    description: 'Supplier Order'
  -
    name: Workers
    description: Workers
  -
    name: OperatorPost
    description: OperatorPost
  -
    name: OrderNotice
    description: OrderNotice
  -
    name: 'Product Lists'
    description: 'Product Lists'
  -
    name: Dispositivos
    description: Dispositivos
  -
    name: ProductionOrders
    description: ProductionOrders
  -
    name: ProductionOrder-Topflow
    description: ProductionOrder-Topflow
  -
    name: Reference-Topflow
    description: Reference-Topflow
  -
    name: 'RFID Readings'
    description: 'RFID Readings'
  -
    name: 'Scada Material Types'
    description: 'Scada Material Types'
  -
    name: 'SCADA Orders'
    description: 'SCADA Orders'
  -
    name: 'Server Registration'
    description: 'Server Registration'
  -
    name: 'Shift History'
    description: 'Shift History'
  -
    name: Sistema
    description: Sistema
  -
    name: Supervisor
    description: Supervisor
  -
    name: Aplicación
    description: Aplicación
  -
    name: Servidor
    description: Servidor
  -
    name: 'Base de Datos'
    description: 'Base de Datos'
  -
    name: 'TCP Operations'
    description: 'TCP Operations'
  -
    name: TransferExternalDb
    description: TransferExternalDb
  -
    name: WorkersExport
    description: WorkersExport

